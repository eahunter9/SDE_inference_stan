array [] vector MDL(real time, vector y, array[] real params, array[] real noise) {
     array[3] vector[size(y)] Y;
     vector[size(y)] dydt;
     vector[size(y)] y_d;
     vector[size(y)] y_s;
     real lambda_parameter;
     real SE;
     real EI;
     real IR;
     real dW1;
     real dW2;
     real dW3;
     real Cases_Per_Day;
     lambda_parameter = params[2]*y[3]/10000;
      SE = lambda_parameter*y[1];
      EI = params[3]*y[2];
      IR = y[3]*params[1];
      dW1 = geometric_random_walk(noise[1],(abs(lambda_parameter*y[1])^0.5));
      dW2 = geometric_random_walk(noise[2],(abs(params[3]*y[2])^0.5));
      dW3 = geometric_random_walk(noise[3],(abs(y[3]*params[1])^0.5));
      Cases_Per_Day = EI;
      y_d[1] = -SE;
      y_d[2] = SE  - EI;
      y_d[3] = EI - IR;
      y_d[4] = IR;
      y_d[5] = Cases_Per_Day;
      y_s[1] = -dW1;
      y_s[2] = dW1 - dW2;
      y_s[3] = dW2 - dW3;
      y_s[4] = dW3;
      y_s[5] = dW2;
      dydt[1] = -SE - dW1;
      dydt[2] = SE + dW1 - EI - dW2;
      dydt[3] = EI + dW2 - IR - dW3;
      dydt[4] = IR + dW3;
      dydt[5] = Cases_Per_Day + dW2;
      Y[1] = dydt;
      Y[2] = y_d;
      Y[3] = y_s;
      return Y;
    }
